<UserControl x:Class="Magitek.Views.UserControls.Astrologian.CardRules"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:astroEnums="clr-namespace:Magitek.Models.Astrologian"
             xmlns:controls="clr-namespace:Magitek.Controls"
             xmlns:enums="clr-namespace:Magitek.Enumerations"
             xmlns:rbEnums="clr-namespace:ff14bot.Managers;assembly=RebornBuddy"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             FontSize="10">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:AstrologianCardRules.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="CardLogicTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="astroEnums:CardLogicType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="CardPlayTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="astroEnums:CardPlayType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="CardActions" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="astroEnums:CardAction" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="CardTargets" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="astroEnums:CardTarget" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="MagitekClassJobTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:MagitekClassJobType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="AstrologianCards" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="rbEnums:ActionResourceManager+Astrologian+AstrologianCard" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="7" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">

                            <Border Name="Background"
                                    Height="14"
                                    Padding="2.5"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    IsHitTestVisible="True">
                                <TextBlock Name="TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource Light}" Text="{TemplateBinding Content}" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource ClassSelectorBackgroundSelectedBug}" />
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource ClassSelectorBackground}" />
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.Setters>
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="Gray" />
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="7" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">

                            <Border Name="Background"
                                    Height="14"
                                    Padding="2.5"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    IsHitTestVisible="True">
                                <TextBlock Name="TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource Light}" Text="{TemplateBinding Content}" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource ClassSelectorBackgroundSelectedBug}" />
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource ClassSelectorBackground}" />
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.Setters>
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="Gray" />
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="7" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">

                            <Border Name="Background"
                                    Height="14"
                                    Padding="2.5"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    IsHitTestVisible="True">
                                <TextBlock Name="TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource Light}" Text="{TemplateBinding Content}" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource ClassSelectorBackgroundSelectedBug}" />
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource ClassSelectorBackground}" />
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Trigger.Setters>
                                        <Setter TargetName="TextBlock" Property="Foreground" Value="Gray" />
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Canvas Margin="5" SnapsToDevicePixels="True">

        <!--  Card Filters  -->
        <Grid Panel.ZIndex="99">
            <ComboBox Width="170" SelectedIndex="0" Style="{DynamicResource ComboBoxOpenRight}" Tag="Card Filters">

                <ComboBoxItem>
                    <Border Margin="5,0,0,0"
                            Padding="3"
                            Background="{DynamicResource BackgroundContent}"
                            BorderBrush="{DynamicResource FlatControlBackground}"
                            BorderThickness="1"
                            CornerRadius="3">
                        <StackPanel>

                            <ListBox ItemContainerStyle="{DynamicResource ListBoxItemNormalTextFilter}" SelectedValue="{Binding LogicType, Mode=OneWayToSource}" SelectedValuePath="Content" Style="{DynamicResource ListboxFilter}">

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBoxItem Width="40" Content="Group" IsSelected="True" />
                                <ListBoxItem Width="40" Content="Raid" />
                                <ListBoxItem Width="40" Content="Solo" />
                                <ListBoxItem Width="40" Content="Pvp" />
                            </ListBox>

                            <ListBox Width="161"
                                     Margin="0,10,0,0"
                                     ItemContainerStyle="{DynamicResource ListBoxItemNormalTextFilter}"
                                     SelectedValue="{Binding Card, Mode=OneWayToSource}"
                                     SelectedValuePath="Content"
                                     Style="{DynamicResource ListboxBug}">

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBoxItem Width="161" Content="Show All Cards" IsSelected="True" />
                                <ListBoxItem Width="40" Content="Balance" />
                                <ListBoxItem Width="40" Content="Bole" />
                                <ListBoxItem Width="40" Content="Arrow" />
                                <ListBoxItem Width="40" Content="Spear" />
                                <ListBoxItem Width="40" Content="Ewer" />
                                <ListBoxItem Width="40" Content="Spire" />
                                <ListBoxItem Width="40" Content="Lady" />
                                <ListBoxItem Width="40" Content="Lord" />

                            </ListBox>
                        </StackPanel>
                    </Border>
                </ComboBoxItem>
            </ComboBox>
        </Grid>

        <!--  Top Bar  -->
        <Grid Canvas.Left="180" Canvas.Top="2" Width="440">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Button Margin="3,0" Command="{Binding AddNewCard}" Content="Add New Card" Style="{DynamicResource ButtonLists}" />
                <Button Margin="3,0" Command="{Binding RemSelCard}" Content="Remove Selected Card" Style="{DynamicResource ButtonLists}" />
            </StackPanel>

            <Button Grid.Column="1"
                    Margin="3,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding ApplyCardRules}"
                    Style="{DynamicResource ButtonApply}">
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold">Apply Changes</TextBlock>
                            <TextBlock>Saves Card Rules to your active Astrologian Settings</TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button Grid.Column="2"
                    Margin="3,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding SaveCardRules}"
                    Style="{DynamicResource ButtonSave}">
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold">Save Card Rules to file (JSON).</TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button Grid.Column="3"
                    Margin="3,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Click="Button_Click"
                    Command="{Binding LoadCardRules}"
                    Style="{DynamicResource ButtonLoad}">
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold">Load Card Rules from file (JSON).</TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button Grid.Column="4"
                    Margin="3,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding LoadDefaultCardRules}"
                    Style="{DynamicResource ButtonLoadDefault}">
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Bold">Reset Card Rules to Defaults.</TextBlock>
                            <TextBlock>The card rules associated with your active Astrologian settings will be replaced with the default rules.</TextBlock>
                            <TextBlock>Please ensure you've backed up any rules you'd like to keep.</TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

        </Grid>

        <StackPanel Canvas.Top="30" Panel.ZIndex="1" Orientation="Horizontal">

            <!--  Left Column  -->
            <StackPanel>

                <!--  Play Type Filters  -->
                <controls:SettingsBlock Background="{DynamicResource ClassSelectorBackground}">

                    <ListBox HorizontalAlignment="Stretch" ItemContainerStyle="{DynamicResource ListBoxItemNormalText}" SelectedValue="{Binding CardPlayType, Mode=OneWayToSource}" SelectedValuePath="Content" Style="{DynamicResource ListboxBug}">

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBoxItem Width="56" Content="Both" IsSelected="True" />
                        <ListBoxItem Width="56" Content="Drawn" />
                        <ListBoxItem Width="56" Content="Held" />

                    </ListBox>
                </controls:SettingsBlock>

                <!--  Card Rules List  -->
                <Border BorderThickness="0.5" CornerRadius="2">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="Black" />
                            <GradientStop Offset="1" Color="#FF0A0A0A" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border Background="{DynamicResource ClassSelectorBackground}" BorderThickness="0.5" CornerRadius="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF040404" />
                                <GradientStop Offset="1" Color="#FF1D1D1D" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>

                        <ListBox Name="CardRulesList"
                                 Width="170"
                                 Height="390"
                                 MaxHeight="390"
                                 ItemsSource="{Binding CollectionViewSource}"
                                 PreviewMouseMove="ListOnPreviewMouseMove"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 SelectedIndex="{Binding SelectedCardRuleIndex, Mode=TwoWay}"
                                 SelectionChanged="Selector_OnSelectionChanged"
                                 SelectionMode="Single"
                                 Style="{DynamicResource ListboxNoBorder}">

                            <ListBox.ItemTemplate>
                                <DataTemplate>

                                    <Grid IsHitTestVisible="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="42" />
                                            <ColumnDefinition Width="17" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Foreground="White" Text="{Binding CardPriority}" />
                                        <TextBlock Grid.Column="1" Foreground="White" Text="{Binding Card}" />

                                        <TextBlock Grid.Column="2" Foreground="{DynamicResource Info}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasConditions}" Value="True">
                                                            <Setter Property="Text" Value="[C]" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HasConditions}" Value="False">
                                                            <Setter Property="Text" Value="" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <TextBlock Grid.Column="3" Foreground="White" Text="{Binding Action}" />

                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                </Border>

            </StackPanel>

            <StackPanel>

                <StackPanel Margin="5,0,0,0" HorizontalAlignment="Center">
                    <StackPanel Margin="0,5,0,0">
                        <TextBlock Foreground="Gray" Text="Card:" />

                        <ComboBox Width="106" HorizontalAlignment="Left" ItemsSource="{Binding Source={StaticResource AstrologianCards}}" SelectedValue="{Binding SelectedCardRules.Card}" Style="{DynamicResource ComboBox}" />
                    </StackPanel>

                    <StackPanel Margin="0,5,0,15" Orientation="Horizontal">

                        <StackPanel>
                            <TextBlock Foreground="Gray" Text="Logic Type:" />

                            <ComboBox Width="106" ItemsSource="{Binding Source={StaticResource CardLogicTypes}}" SelectedValue="{Binding SelectedCardRules.LogicType}" Style="{DynamicResource ComboBox}" />
                        </StackPanel>

                        <StackPanel Margin="5,0,0,0">
                            <TextBlock Foreground="Gray" Text="Play Type:" />

                            <ComboBox Width="106" ItemsSource="{Binding Source={StaticResource CardPlayTypes}}" SelectedValue="{Binding SelectedCardRules.PlayType}" Style="{DynamicResource ComboBox}" />
                        </StackPanel>

                        <StackPanel Margin="5,0,0,0">
                            <TextBlock Foreground="Gray" Text="Action:" />

                            <ComboBox Width="106" ItemsSource="{Binding Source={StaticResource CardActions}}" SelectedValue="{Binding SelectedCardRules.Action}" Style="{DynamicResource ComboBox}" />
                        </StackPanel>

                        <StackPanel Margin="5,0,0,5">
                            <TextBlock Foreground="Gray" Text="Card Target:" />

                            <ComboBox Name="CardTargetSelected" Width="106" ItemsSource="{Binding Source={StaticResource CardTargets}}" SelectedValue="{Binding SelectedCardRules.Target}" Style="{DynamicResource ComboBox}" />
                        </StackPanel>

                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <StackPanel Height="320" Margin="8,0,0,0" Background="{DynamicResource Background}">

                            <StackPanel Margin="0,5,0,0">
                                <Border BorderBrush="{DynamicResource Black50}" BorderThickness="0,0,0,1">
                                    <TextBlock FontSize="10" Style="{DynamicResource TextBlockDefault}" Text="Combat Settings" />
                                </Border>

                                <StackPanel Margin="0,3,0,0" Orientation="Horizontal">
                                    <RadioButton Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="CombatSettingsToggleCheckChanged"
                                                 Content="IN COMBAT"
                                                 GroupName="CombatSettings"
                                                 IsChecked="{Binding CombatSettingsInCombat, Mode=TwoWay}" />
                                    <RadioButton Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="CombatSettingsToggleCheckChanged"
                                                 Content="OUT OF COMBAT"
                                                 GroupName="CombatSettings"
                                                 IsChecked="{Binding CombatSettingsOutOfCombat, Mode=TwoWay}" />
                                    <RadioButton Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="CombatSettingsToggleCheckChanged"
                                                 Content="BOTH"
                                                 GroupName="CombatSettings"
                                                 IsChecked="{Binding CombatSettingsBoth, Mode=TwoWay}" />
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Margin="0,5,0,0">
                                <Border BorderBrush="{DynamicResource Black50}" BorderThickness="0,0,0,1">
                                    <TextBlock FontSize="10" Style="{DynamicResource TextBlockDefault}" Text="Has Held Card" />
                                </Border>
                                <StackPanel Margin="0,3,0,0" Orientation="Horizontal">

                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="NONE"
                                                          IsChecked="{Binding HasHeldNone, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="BOLE"
                                                          IsChecked="{Binding HasHeldBole, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="EWER"
                                                          IsChecked="{Binding HasHeldEwer, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="BALANCE"
                                                          IsChecked="{Binding HasHeldBalance, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                        </StackPanel>

                                        <StackPanel Margin="0,1,0,0" Orientation="Horizontal">
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="SPEAR"
                                                          IsChecked="{Binding HasHeldSpear, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="SPIRE"
                                                          IsChecked="{Binding HasHeldSpire, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="HasHeldCardCheckChanged"
                                                          Content="ARROW"
                                                          IsChecked="{Binding HasHeldArrow, Mode=TwoWay}"
                                                          Unchecked="HasHeldCardCheckChanged" />
                                        </StackPanel>
                                    </StackPanel>

                                </StackPanel>
                            </StackPanel>

                            <StackPanel Margin="0,5,0,0">
                                <Border BorderBrush="{DynamicResource Black50}" BorderThickness="0,0,0,1">
                                    <TextBlock FontSize="10" Style="{DynamicResource TextBlockDefault}" Text="Doesn't Have Held Card" />
                                </Border>
                                <StackPanel Margin="0,3,0,0" Orientation="Horizontal">

                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="NONE"
                                                          IsChecked="{Binding DoesNotHaveHeldNone, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="BOLE"
                                                          IsChecked="{Binding DoesNotHaveHeldBole, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="EWER"
                                                          IsChecked="{Binding DoesNotHaveHeldEwer, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="BALANCE"
                                                          IsChecked="{Binding DoesNotHaveHeldBalance, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                        </StackPanel>

                                        <StackPanel Margin="0,1,0,0" Orientation="Horizontal">
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="SPEAR"
                                                          IsChecked="{Binding DoesNotHaveHeldSpear, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="SPIRE"
                                                          IsChecked="{Binding DoesNotHaveHeldSpire, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                            <ToggleButton Width="53"
                                                          Margin="0,0,1,0"
                                                          Checked="DoesNotHaveHeldCardCheckChanged"
                                                          Content="ARROW"
                                                          IsChecked="{Binding DoesNotHaveHeldArrow, Mode=TwoWay}"
                                                          Unchecked="DoesNotHaveHeldCardCheckChanged" />
                                        </StackPanel>
                                    </StackPanel>

                                </StackPanel>
                            </StackPanel>

                            <StackPanel Width="215" Margin="0,5,0,0" HorizontalAlignment="Left">
                                <Border BorderBrush="{DynamicResource Black50}" BorderThickness="0,0,0,1">
                                    <TextBlock FontSize="10" Style="{DynamicResource TextBlockDefault}" Text="Must The Card Target Also Have A Target?" />
                                </Border>
                                <StackPanel Margin="0,3,0,0" Orientation="Horizontal">
                                    <RadioButton Name="TargetYes"
                                                 Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="TargetHasTargetCheckChanged"
                                                 Content="YES"
                                                 GroupName="TargetHasTarget"
                                                 IsChecked="{Binding TargetHasTargetYes, Mode=TwoWay}" />
                                    <RadioButton Name="TargetNo"
                                                 Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="TargetHasTargetCheckChanged"
                                                 Content="NO"
                                                 GroupName="TargetHasTarget"
                                                 IsChecked="{Binding TargetHasTargetNo, Mode=TwoWay}" />
                                    <RadioButton Name="TargetDoesntMatter"
                                                 Width="70"
                                                 Margin="0,0,1,0"
                                                 Checked="TargetHasTargetCheckChanged"
                                                 Content="DOESNT MATTER"
                                                 GroupName="TargetHasTarget"
                                                 IsChecked="{Binding TargetHasTargetDoesntMatter, Mode=TwoWay}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel>
                        <StackPanel>

                            <StackPanel Margin="5,0,0,0">

                                <StackPanel Height="320" Orientation="Horizontal">

                                    <controls:SettingsBlock Width="162" Margin="5,0,0,0" Background="{DynamicResource ClassSelectorBackground}">
                                        <StackPanel Margin="3">
                                            <TextBlock Margin="0,10,0,0" HorizontalAlignment="Center" Style="{DynamicResource TextBlockDefault}" Text="Target Conditions" />

                                            <StackPanel Margin="0,10" HorizontalAlignment="Center">
                                                <controls:NumericSmall Width="136"
                                                                       FirstText="Less Than"
                                                                       Increment="5"
                                                                       MaxValue="100"
                                                                       MinValue="1"
                                                                       SecondText="Health Percent"
                                                                       Value="{Binding SelectedCardRules.TargetConditions.HpLessThan, Mode=TwoWay}" />
                                                <controls:NumericSmall Width="136"
                                                                       Margin="0,2,0,0"
                                                                       FirstText="Less Than"
                                                                       Increment="5"
                                                                       MaxValue="100"
                                                                       MinValue="1"
                                                                       SecondText="Mana Percent"
                                                                       Value="{Binding SelectedCardRules.TargetConditions.MpLessThan, Mode=TwoWay}" />
                                                <controls:NumericSmall Width="136"
                                                                       Margin="0,2,0,0"
                                                                       FirstText="Less Than"
                                                                       Increment="5"
                                                                       MaxValue="100"
                                                                       MinValue="1"
                                                                       SecondText="TP Percent"
                                                                       Value="{Binding SelectedCardRules.TargetConditions.TpLessThan, Mode=TwoWay}" />
                                            </StackPanel>

                                            <StackPanel Margin="0,0,0,5">
                                                <StackPanel HorizontalAlignment="Center">
                                                    <controls:NumericSmall Width="136"
                                                                           FirstText="More Than"
                                                                           Increment="1"
                                                                           MaxValue="8"
                                                                           MinValue="0"
                                                                           SecondText="Allies Nearby"
                                                                           Value="{Binding SelectedCardRules.TargetConditions.WithAlliesNearbyMoreThan, Mode=TwoWay}" />
                                                </StackPanel>
                                            </StackPanel>

                                            <StackPanel Margin="12,0,0,0">
                                                <StackPanel.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=CardTargetSelected, Path=SelectedValue}" Value="Me">
                                                                <Setter Property="StackPanel.Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=CardTargetSelected, Path=SelectedValue}" Value="PartyMember">
                                                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <TextBlock FontSize="10" Foreground="Gray" Text="Specific Target Name:" />
                                                <StackPanel Margin="0,3,0,0" Orientation="Horizontal">
                                                    <TextBox Width="136" Height="20" Template="{DynamicResource TextBoxTemplate}" Text="{Binding SelectedCardRules.TargetConditions.PlayerName, Mode=TwoWay}" />
                                                </StackPanel>

                                            </StackPanel>

                                        </StackPanel>
                                    </controls:SettingsBlock>

                                    <controls:SettingsBlock Margin="5,0,0,0" Background="{DynamicResource ClassSelectorBackground}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Column="1" Width="47" VerticalAlignment="Center">

                                                <StackPanel>
                                                    <ToggleButton Checked="IsRoleCheckChanged" Content="TANK" IsChecked="{Binding IsRoleTank, Mode=TwoWay}" Unchecked="IsRoleCheckChanged" />
                                                    <ToggleButton Checked="IsRoleCheckChanged" Content="HEALER" IsChecked="{Binding IsRoleHealer, Mode=TwoWay}" Unchecked="IsRoleCheckChanged" />
                                                    <ToggleButton Checked="IsRoleCheckChanged" Content="DPS" IsChecked="{Binding IsRoleDps, Mode=TwoWay}" Unchecked="IsRoleCheckChanged" />
                                                </StackPanel>

                                                <StackPanel Margin="0,20,0,0">
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="SCH" IsChecked="{Binding IsJobScholar, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="WHM" IsChecked="{Binding IsJobWhiteMage, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="AST" IsChecked="{Binding IsJobAstrologian, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="PLD" IsChecked="{Binding IsJobPaladin, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="WAR" IsChecked="{Binding IsJobWarrior, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="DRK" IsChecked="{Binding IsJobDarkKnight, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="BLM" IsChecked="{Binding IsJobBlackMage, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="RDM" IsChecked="{Binding IsJobRedMage, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="SMN" IsChecked="{Binding IsJobSummoner, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="BRD" IsChecked="{Binding IsJobBard, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="MCH" IsChecked="{Binding IsJobMachinist, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="DRG" IsChecked="{Binding IsJobDragoon, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="MNK" IsChecked="{Binding IsJobMonk, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="NIN" IsChecked="{Binding IsJobNinja, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                    <ToggleButton Checked="IsJobCheckChanged" Content="SAM" IsChecked="{Binding IsJobSamurai, Mode=TwoWay}" Unchecked="IsJobCheckChanged" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </controls:SettingsBlock>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Canvas>
</UserControl>